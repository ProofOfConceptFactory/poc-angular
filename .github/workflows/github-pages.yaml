# Simple workflow for deploying static content to GitHub Pages
name: GitHub Pages

on:
  # Runs on pushes targeting the default branch
  push:
    branches: [ main ]
  # Runs on pull requests based on the default branch
  pull_request:
    branches: [ main ]

# Sets the GITHUB_TOKEN permissions to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

jobs:
  tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: pnpm/action-setup@v4
        name: Install pnpm
        with:
          version: 10
          run_install: false
      - name: Set up Node
        uses: actions/setup-node@v4
        with:
          node-version: latest
          cache: 'pnpm'
      - name: Install mkcert latest version and generate certificates
        run: |
          LATEST_VERSION=$(curl -s https://api.github.com/repos/FiloSottile/mkcert/releases/latest | jq -r '.tag_name')
          curl -L -o mkcert "https://github.com/FiloSottile/mkcert/releases/download/${LATEST_VERSION}/mkcert-${LATEST_VERSION}-linux-amd64" -o mkcert
          chmod +x mkcert
          ./mkcert -install
          mkdir -p certs
          ./mkcert -key-file certs/poc-angular.key.pem -cert-file certs/poc-angular.crt.pem localhost
      - name: Install dependencies
        run: pnpm install
      - name: Run dev server in background
        run: pnpm run ng serve --host 0.0.0.0 --ssl true --ssl-key "certs/poc-angular.key.pem" --ssl-cert "certs/poc-angular.crt.pem" &
      - name: Requirements for testing
        run: |
          curl -fsSL https://dl.google.com/linux/linux_signing_key.pub | sudo gpg --dearmor -o /usr/share/keyrings/google-chrome.gpg
          echo "deb [arch=amd64 signed-by=/usr/share/keyrings/google-chrome.gpg] http://dl.google.com/linux/chrome/deb/ stable main" | sudo tee /etc/apt/sources.list.d/google-chrome.list

          sudo apt-get update
          sudo apt-get install -y google-chrome-stable xvfb
      - name: Run tests
        run: pnpm run ng test --watch=false

  deploy:
    # Only run deployment on main branch pushes or manual workflow dispatch
    if: github.ref_name == 'main'
    needs: tests
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - uses: pnpm/action-setup@v4
        name: Install pnpm
        with:
          version: 10
          run_install: false
      - name: Set up Node
        uses: actions/setup-node@v4
        with:
          node-version: latest
          cache: 'pnpm'
      - name: Install dependencies
        run: pnpm install
      - name: Build
        run: pnpm run ng build --output-path dist --base-href /poc-angular/
      - name: Move files from browser folder to dist folder
        run: |
          mv ./dist/browser/* ./dist
          rm -rf ./dist/browser
      - name: Setup Pages
        uses: actions/configure-pages@v4
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          # Upload dist folder
          path: './dist'
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
